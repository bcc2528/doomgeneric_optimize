# Makefile

# バージョン
version = 0x1000

# リリース用をデフォルトにする
#mode =

# マルチタスク対応ライブラリを使用
#USE_MT = 1

# C++ アプリケーションライブラリを使用
#USE_CPP = 1

# ソースの依存関係ファイル (自動生成)
DEPS = Dependencies
DEPENDENCIES_OUTPUT := $(DEPS)

# アプリケーション標準ルール
include $(BD)/unix/etc/makerules
#include $(BD)/appl/etc/makerules

# ターゲット
ifeq ($(MACHINE), sun4)
  btron = no
else
  btron = yes
endif

# ----------------------------------------------------------------------------
# 作成対象
TARGET = trondoom

# ソースファイルのサーチパス
S = ./ ../src
VPATH = $(S)

# ヘッダファイルのディレクトリ追加
HEADER := $(S) $(HEADER)


DATABOX_HEADER := $(S)

# ソースファイル
SRC = am_map.c d_event.c d_items.c d_iwad.c d_loop.c d_main.c d_mode.c d_net.c doomdef.c doomgeneric.c doomstat.c dstrings.c dummy.c f_finale.c f_wipe.c g_game.c gusconf.c hu_lib.c hu_stuff.c i_endoom.c i_input.c i_joystick.c i_scale.c i_sound_btron.c i_system.c i_timer.c i_video.c icon.c info.c m_argv.c m_bbox.c m_cheat.c m_config.c m_controls.c m_fixed.c m_menu.c m_misc.c m_random.c memio.c p_ceilng.c p_doors.c p_enemy.c p_floor.c p_inter.c p_lights.c p_map.c p_maputl.c p_mobj.c p_plats.c p_pspr.c p_saveg.c p_setup.c p_sight.c p_spec.c p_switch.c p_telept.c p_tick.c p_user.c r_bsp.c r_data.c r_draw.c r_main.c r_plane.c r_segs.c r_sky.c r_things.c s_sound.c sha1.c sounds.c st_lib.c st_stuff.c statdump.c tables.c v_video.c w_checksum.c w_file.c w_file_stdc.c w_main.c w_wad.c wi_stuff.c z_zone.c doomgeneric_btron.c

ALL = $(INST)
EXT = .out
CFLAGS += $(CFLAGS_WARING) -Wno-uninitialized -I../../include
DATABOX_HEADER += $(BD)/include
#LOADLIBES += -lstlport

OBJ = $(addsuffix .o, $(basename $(SRC)))

WC_SRC = $(filter %.CC, $(SRC))

#ifneq ($(mode), debug)
#  CFLAGS += -W -Wall
#endif

ifeq ($(MACHINE), sun4)
  ifeq ($(mode), debug)
    CFLAGS += -Wno-unused
  endif
  LDLIBS = -lg -llang -ldbg
  LDOBJS =
endif

# ----------------------------------------------------------------------------
.PHONY: all clean install

INST = $(addprefix $(TARGET), .bz .map)
INST2 = $(addprefix $(TARGET), $(EXT) .dbx) $(TARGET).fsn

#all: $(ALL)
all: $(TARGET)$(EXT)

$(TARGET)$(EXT): $(OBJ)
	$(LINK.o) $(LDOBJS) $^ $(LOADLIBES) $(LDLIBS) $(OUTPUT_OPTION)

clean:
	$(RM) $(OBJ)
	$(RM) $(WC_SRC:%.CC=%.cc) $(DBSRC)
	$(RM) $(INST) $(INST2) *.lst $(DEPS)

install: $(INST:%=$(EXE_INSTALLDIR)/%)

$(EXE_INSTALLDIR)/$(TARGET).out: $(EXE_INSTALLDIR)/%: %
	$(EXE_INSTALL_STRIP)

# 圧縮アーカイブ
$(TARGET).bz: $(INST2)
	$(CP) $(TARGET).out _t
	$(STRIP) _t
	$(MKBTF) -o$@ -a0x8003 -c -f0x40 -tTEST \
		9.0x163._t \
		10.0.$(TARGET).dbx \
		7.$(version).$(TARGET).fsn
	$(RM) _t

# ソースの依存関係

$(WC_SRC:%.CC=%.cc):

$(TARGET).dbx: $(TARGET).d
$(TARGET).fsn: $(TARGET).f

ifdef DEPENDENCIES_OUTPUT
$(DEPS):	; touch $(DEPS)
else
$(DEPS): $(SRC)	; $(MAKEDEPS) $@ $?
endif

include $(DEPS)
